import {Scale} from '../src/Scale'
import {Scales} from '../src/Scales'

test('C Mayor scale degrees and modes', ()=>{
  const scale = new Scale('C', Scales.mayor)

  expect(scale.degree(1)).toStrictEqual('C')
  expect(scale.degree(2)).toStrictEqual('D')
  expect(scale.degree(3)).toStrictEqual('E')
  expect(scale.degree(4)).toStrictEqual('F')
  expect(scale.degree(5)).toStrictEqual('G')
  expect(scale.degree(6)).toStrictEqual('A')
  expect(scale.degree(7)).toStrictEqual('B')
  expect(scale.degree(8)).toStrictEqual('C')
  expect(scale.degree(9)).toStrictEqual('D')
  expect(scale.degree(10)).toStrictEqual('E')
  expect(scale.degree(11)).toStrictEqual('F')
  expect(scale.degree(12)).toStrictEqual('G')
  expect(scale.degree(13)).toStrictEqual('A')

  expect(scale.mode(1)).toStrictEqual(['C', 'D', 'E', 'F', 'G', 'A', 'B'])
  expect(scale.mode(2)).toStrictEqual(['D', 'E', 'F', 'G', 'A', 'B', 'C'])
  expect(scale.mode(3)).toStrictEqual(['E', 'F', 'G', 'A', 'B', 'C', 'D'])
  expect(scale.mode(4)).toStrictEqual(['F', 'G', 'A', 'B', 'C', 'D', 'E'])
  expect(scale.mode(5)).toStrictEqual(['G', 'A', 'B', 'C', 'D', 'E', 'F'])
  expect(scale.mode(6)).toStrictEqual(['A', 'B', 'C', 'D', 'E', 'F', 'G'])
  expect(scale.mode(7)).toStrictEqual(['B', 'C', 'D', 'E', 'F', 'G', 'A'])
  expect(scale.mode(8)).toStrictEqual(['C', 'D', 'E', 'F', 'G', 'A', 'B'])
})

test('C# Mayor scale degrees and modes', ()=>{
  const scale = new Scale('C#', Scales.mayor)

  expect(scale.degree(1)).toStrictEqual('C#')
  expect(scale.degree(2)).toStrictEqual('D#')
  expect(scale.degree(3)).toStrictEqual('F')
  expect(scale.degree(4)).toStrictEqual('F#')
  expect(scale.degree(5)).toStrictEqual('G#')
  expect(scale.degree(6)).toStrictEqual('A#')
  expect(scale.degree(7)).toStrictEqual('C')
  expect(scale.degree(8)).toStrictEqual('C#')
  expect(scale.degree(9)).toStrictEqual('D#')
  expect(scale.degree(10)).toStrictEqual('F')
  expect(scale.degree(11)).toStrictEqual('F#')
  expect(scale.degree(12)).toStrictEqual('G#')
  expect(scale.degree(13)).toStrictEqual('A#')

  expect(scale.mode(1)).toStrictEqual(['C#', 'D#', 'F', 'F#', 'G#', 'A#', 'C'])
  expect(scale.mode(2)).toStrictEqual(['D#', 'F', 'F#', 'G#', 'A#', 'C', 'C#'])
  expect(scale.mode(3)).toStrictEqual(['F', 'F#', 'G#', 'A#', 'C', 'C#', 'D#'])
  expect(scale.mode(4)).toStrictEqual(['F#', 'G#', 'A#', 'C', 'C#', 'D#', 'F'])
  expect(scale.mode(5)).toStrictEqual(['G#', 'A#', 'C', 'C#', 'D#', 'F', 'F#'])
  expect(scale.mode(6)).toStrictEqual(['A#', 'C', 'C#', 'D#', 'F', 'F#', 'G#'])
  expect(scale.mode(7)).toStrictEqual(['C', 'C#', 'D#', 'F', 'F#', 'G#', 'A#'])
  expect(scale.mode(8)).toStrictEqual(['C#', 'D#', 'F', 'F#', 'G#', 'A#', 'C'])
})

test('C Mayor scale degrees and modes', ()=>{
  const scale = new Scale('C', Scales.pentatonic)

  expect(scale.degree(1)).toStrictEqual('C')
  expect(scale.degree(2)).toStrictEqual('D')
  expect(scale.degree(3)).toStrictEqual('E')
  expect(scale.degree(4)).toStrictEqual('G')
  expect(scale.degree(5)).toStrictEqual('A')
  expect(scale.degree(6)).toStrictEqual('C')
  expect(scale.degree(7)).toStrictEqual('D')
  expect(scale.degree(8)).toStrictEqual('E')
  expect(scale.degree(9)).toStrictEqual('G')
  expect(scale.degree(10)).toStrictEqual('A')
  expect(scale.degree(11)).toStrictEqual('C')
  expect(scale.degree(12)).toStrictEqual('D')
  expect(scale.degree(13)).toStrictEqual('E')

  expect(scale.mode(1)).toStrictEqual(['C', 'D', 'E', 'G', 'A'])
  expect(scale.mode(2)).toStrictEqual(['D', 'E', 'G', 'A', 'C'])
  expect(scale.mode(3)).toStrictEqual(['E', 'G', 'A', 'C', 'D'])
  expect(scale.mode(4)).toStrictEqual(['G', 'A', 'C', 'D', 'E'])
  expect(scale.mode(5)).toStrictEqual(['A', 'C', 'D', 'E', 'G'])
  expect(scale.mode(6)).toStrictEqual(['C', 'D', 'E', 'G', 'A'])
  expect(scale.mode(7)).toStrictEqual(['D', 'E', 'G', 'A', 'C'])
  expect(scale.mode(8)).toStrictEqual(['E', 'G', 'A', 'C', 'D'])
})
